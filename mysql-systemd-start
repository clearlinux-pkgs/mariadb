#! /bin/bash
#
# Scripts to run by MySQL systemd service
# 
# Needed argument: pre | post
# 
# pre mode  :  try to run mysql_install_db and fix perms and SELinux contexts
# post mode :  ping server until answer is received
# 

get_option () {
    local section=$1
    local option=$2
    local default=$3
    ret=$(/usr/bin/my_print_defaults $section | grep '^--'${option}'=' | cut -d= -f2-)
    [ -z $ret ] && ret=$default
    echo $ret
}

install_db () {    
    datadir=$(get_option mysqld datadir "/var/lib/mysql")

    # Restore dir
    [ -d "$datadir" ] || install -d -m 0700 -omysql -gmysql "$datadir" || exit 1

    # If special mysql dir is in place, skip db install 
    [ -d "$datadir/mysql" ] && exit 0

    # Create initial db
    /usr/bin/mysql_install_db --rpm --datadir="$datadir" --user=mysql
    exit 0
}

pinger () {
    # Wait for ping to answer to signal startup completed,
    # might take a while in case of e.g. crash recovery
    # MySQL systemd service will timeout script if no answer
    datadir=$(get_option mysqld datadir "/var/lib/mysql")
    socket=$(get_option  mysqld socket "/run/mariadb/mariadb.sock")

    while /bin/true ; do
        response=$(mysqladmin --socket="$socket" -uUNKNOWN_USER ping 2>&1) && break
        echo "$response" | grep -q "mysqld is alive" && break
        echo "$response" | grep -q "Access denied for user" && break
        sleep 1
    done
    exit 0
}

# main
case $1 in
    "pre") install_db ;;
    "post") pinger ;;
esac

exit 0

